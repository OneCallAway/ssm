<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <!--加载spring容器-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/*.xml</param-value>
  </context-param>


  <!--spring 监听器-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!--配置springmvc前端控制器-->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--配置ｓｐｒｉｎｇ加载的映射文件-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-mvc.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <!--
    第一种：*．action,访问以action结尾的由DispatcherServlet进行解析
    第二种:/,所有的访问地址都由DispatcherServlet进行解析,对静态文件的解析需要配置不让DispatcherServlet进行解析，
    使用此方法可以实现RESTful风格的url
    第三种：/*,配置错误，使用此配置最终会转发到一个ｊｓｐ页面，仍然会有DispatcherServlet解析jsp地址，不能根据
    jsp页面找到handler
    -->
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
